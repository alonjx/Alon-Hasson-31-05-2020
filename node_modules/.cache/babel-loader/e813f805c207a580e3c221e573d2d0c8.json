{"ast":null,"code":"import AppDispatcher from '../dispatcher/AppDispatcher';\nimport $ from 'jquery';\n\nclass MessageActions {\n  sendMessage(sender, receiver, subject, content) {\n    $.ajax({\n      type: \"POST\",\n      dataType: \"json\",\n      url: \"/send\",\n      data: {\n        \"sender\": sender,\n        \"receiver\": receiver,\n        \"subject\": subject,\n        \"content\": content\n      },\n      success: function (response) {\n        if (response === \"done\") {\n          AppDispatcher.dispatch({\n            type: \"MESSAGE_SENT\"\n          });\n          AppDispatcher.dispatch({\n            type: \"NOTIFICATION\",\n            variant: \"success\",\n            content: \"Message Sent!\"\n          });\n        } else AppDispatcher.dispatch({\n          type: \"danger\",\n          value: \"Error: \" + response.responseText\n        });\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        alert(\"Error, status = \" + textStatus + \", \" + \"error thrown: \" + errorThrown);\n      }\n    });\n  }\n\n  removeMessage(id) {\n    $.ajax({\n      type: \"POST\",\n      dataType: \"json\",\n      url: \"/delete\",\n      data: {\n        \"message_id\": id\n      },\n      success: function (response) {\n        if (response === \"done\") {\n          AppDispatcher.dispatch({\n            type: \"MESSAGE_DELETED\"\n          });\n          AppDispatcher.dispatch({\n            type: \"NOTIFICATION\",\n            variant: \"success\",\n            content: \"Message deleted!\"\n          });\n        } else AppDispatcher.dispatch({\n          type: \"NOTIFICATION\",\n          variant: \"danger\",\n          content: \"Error: \" + response\n        });\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        alert(\"Error, status = \" + textStatus + \", \" + \"error thrown: \" + errorThrown);\n      }\n    });\n  }\n\n  loadData(user_id) {\n    $.ajax({\n      type: \"POST\",\n      dataType: \"json\",\n      url: \"/messages\",\n      data: {\n        user_id: user_id\n      },\n      success: function (response) {\n        AppDispatcher.dispatch({\n          type: \"MESSAGES_FETCHED\",\n          messages: response\n        });\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        alert(\"Error, status = \" + textStatus + \", \" + \"error thrown: \" + errorThrown);\n      }\n    });\n  }\n\n}\n\nexport default new MessageActions();","map":{"version":3,"sources":["/home/alon/dev/Alon-Hasson-31-05-2020/src/js/actions/MessageActions.js"],"names":["AppDispatcher","$","MessageActions","sendMessage","sender","receiver","subject","content","ajax","type","dataType","url","data","success","response","dispatch","variant","value","responseText","error","jqXHR","textStatus","errorThrown","alert","removeMessage","id","loadData","user_id","messages"],"mappings":"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","sourcesContent":["import AppDispatcher from '../dispatcher/AppDispatcher';\n\nimport $ from 'jquery';\n\nclass MessageActions {\n\n\tsendMessage(sender, receiver, subject, content) {\n\t\t$.ajax({\n\t\t\ttype:    \"POST\",\n\t\t\tdataType: \"json\",\n\t\t\turl:     \"/send\",\n\t\t\tdata:    { \"sender\": sender, \"receiver\" : receiver, \"subject\": subject, \"content\": content},\n\t\t\tsuccess: function(response) {\n\t\t    \tif (response === \"done\")\n\t\t    \t{\n\t\t        \tAppDispatcher.dispatch({type: \"MESSAGE_SENT\"});\n\t\t    \t\tAppDispatcher.dispatch({type:\"NOTIFICATION\", variant: \"success\", content: \"Message Sent!\"});\n\t\t    \t}\n\n\t\t        else\n\t\t        \tAppDispatcher.dispatch({ type: \"danger\", value: \"Error: \" + response.responseText });\n\t\t       },\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\n\t\t\t    alert(\"Error, status = \" + textStatus + \", \" +\n\t\t\t\t    \"error thrown: \" + errorThrown\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n    removeMessage(id)\n    {\n\t\t$.ajax({\n\t\t\ttype:    \"POST\",\n\t\t\tdataType: \"json\",\n\t\t\turl:     \"/delete\",\n\t\t\tdata:    {\"message_id\": id},\n\t\t\tsuccess: function(response) {\n\t\t    \tif (response === \"done\") {\n\t\t        \tAppDispatcher.dispatch({type: \"MESSAGE_DELETED\"});\n\t\t        \tAppDispatcher.dispatch({type:\"NOTIFICATION\", variant: \"success\", content: \"Message deleted!\"});\n\t\t        }\n\t\t        else\n\t\t        \tAppDispatcher.dispatch({type:\"NOTIFICATION\", variant: \"danger\", content: \"Error: \" + response});\n\t\t   \t},\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\n\t\t\t    alert(\"Error, status = \" + textStatus + \", \" +\n\t\t\t\t    \"error thrown: \" + errorThrown\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n    }\n\n    loadData(user_id) {\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\tdataType: \"json\",\n\t\t\turl: \"/messages\",\n\t\t\tdata: {user_id:user_id},\n\t\t\tsuccess: function(response) {\n\t\t\t\tAppDispatcher.dispatch({ type: \"MESSAGES_FETCHED\", messages: response });\n\t\t\t},\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\n\t\t\t    alert(\"Error, status = \" + textStatus + \", \" +\n\t\t\t\t    \"error thrown: \" + errorThrown\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\n  \n\nexport default new MessageActions()"]},"metadata":{},"sourceType":"module"}