{"ast":null,"code":"import _assertThisInitialized from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import MessageStore from'./js/stores/MessageStore';import MessageActions from'./js/actions/MessageActions';import AddWindow from'./js/components/AddWindow';import MessageMenuTab from'./js/components/MessageMenuTab';import ReactNotification from'react-notifications-component';import'react-notifications-component/dist/theme.css';import\"./App.css\";var MessageView=/*#__PURE__*/function(_React$Component){_inherits(MessageView,_React$Component);var _super=_createSuper(MessageView);function MessageView(){_classCallCheck(this,MessageView);return _super.apply(this,arguments);}_createClass(MessageView,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"card p-5\"},/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"h3\",null,this.props.data.subject)),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"h6\",null,\"From: \",this.props.data.sender),/*#__PURE__*/React.createElement(\"h6\",null,\"to: \",this.props.data.receiver)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,this.props.data.content)));}}]);return MessageView;}(React.Component);var App=/*#__PURE__*/function(_React$Component2){_inherits(App,_React$Component2);var _super2=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super2.call(this,props);_this.state={user_id:\"aaa@gmail.com\",selected_message:\"\",message_type:\"received\",messages:{},sent_messages:{},received_messages:{}};_this.onChangeMessages=_this.onChangeMessages.bind(_assertThisInitialized(_this));_this.messageTabClick=_this.messageTabClick.bind(_assertThisInitialized(_this));_this.onRemoveMessage=_this.onRemoveMessage.bind(_assertThisInitialized(_this));_this.displaySentMessages=_this.changeMessageType.bind(_assertThisInitialized(_this),\"sent\");_this.displayReceivedMessages=_this.changeMessageType.bind(_assertThisInitialized(_this),\"received\");_this.onMessageAction=_this.onMessageAction.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"onMessageAction\",value:function onMessageAction(){MessageActions.loadData(this.state.user_id);}},{key:\"onChangeMessages\",value:function onChangeMessages(){if(this.state.message_type===\"received\")this.setState({messages:MessageStore.getAllReceived(this.state.user_id),selected_message:\"\"});else this.setState({messages:MessageStore.getAllSent(this.state.user_id),selected_message:\"\"});}},{key:\"changeMessageType\",value:function changeMessageType(t){if(t===\"received\"&&this.state.message_type!==\"received\")this.setState({selected_message:\"\",messages:MessageStore.getAllReceived(this.state.user_id),message_type:\"received\"});else if(t===\"sent\"&&this.state.message_type!==\"sent\")this.setState({selected_message:\"\",messages:MessageStore.getAllSent(this.state.user_id),message_type:\"sent\"});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){MessageStore.removeChangeListener(\"MESSAGES_FETCHED\",this.onChangeMessages);MessageStore.removeChangeListener(\"MESSAGE_DELETED\",this.onMessageAction);MessageStore.removeChangeListener(\"MESSAGE_SENT\",this.onMessageAction);}},{key:\"componentDidMount\",value:function componentDidMount(){MessageStore.addChangeListener(\"MESSAGES_FETCHED\",this.onChangeMessages);MessageStore.addChangeListener(\"MESSAGE_DELETED\",this.onMessageAction);MessageStore.addChangeListener(\"MESSAGE_SENT\",this.onMessageAction);MessageActions.loadData(this.state.user_id);}},{key:\"userIdChange\",value:function userIdChange(e){this.setState({user_id:e.target.value});MessageActions.loadData(e.target.value);}},{key:\"messageTabClick\",value:function messageTabClick(i){this.setState({selected_message:i});}},{key:\"onRemoveMessage\",value:function onRemoveMessage(i){MessageActions.removeMessage(i);}},{key:\"render\",value:function render(){var _this2=this;var listItems=Object.keys(this.state.messages).map(function(i){return/*#__PURE__*/React.createElement(MessageMenuTab,{onClick:_this2.messageTabClick,onRemove:_this2.onRemoveMessage,key:i,id:i,data:_this2.state.messages[i]});});return/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper\"},/*#__PURE__*/React.createElement(ReactNotification,null),/*#__PURE__*/React.createElement(\"nav\",{id:\"sidebar\",className:\"d-flex flex-column\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item\"},\"Who are you? \",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"userid\",onChange:this.userIdChange.bind(this),value:this.state.user_id})),/*#__PURE__*/React.createElement(\"div\",{className:\"list-group list-group-horizontal d-flex\"},/*#__PURE__*/React.createElement(\"button\",{id:\"receivedbtn\",onClick:this.displayReceivedMessages,className:\"list-group-item flex-fill rounded-0 \".concat(this.state.message_type===\"received\"?'active':'')},\" Received\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge\"},Object.keys(MessageStore.getAllReceived(this.state.user_id)).length)),/*#__PURE__*/React.createElement(\"button\",{href:\"#\",id:\"sentbtn\",onClick:this.displaySentMessages,className:\"list-group-item flex-fill rounded-0 \".concat(this.state.message_type===\"sent\"?'active':'')},\" Sent\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge\"},Object.keys(MessageStore.getAllSent(this.state.user_id)).length))),listItems),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},this.state.selected_message?/*#__PURE__*/React.createElement(MessageView,{data:this.state.messages[this.state.selected_message]}):/*#__PURE__*/React.createElement(\"div\",{className:\"banner\"},\"Simple Message\"),/*#__PURE__*/React.createElement(AddWindow,{sender:this.state.user_id})));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/alon/dev/Alon-Hasson-31-05-2020/frontend/src/app.js"],"names":["React","MessageStore","MessageActions","AddWindow","MessageMenuTab","ReactNotification","MessageView","props","data","subject","sender","receiver","content","Component","App","state","user_id","selected_message","message_type","messages","sent_messages","received_messages","onChangeMessages","bind","messageTabClick","onRemoveMessage","displaySentMessages","changeMessageType","displayReceivedMessages","onMessageAction","loadData","setState","getAllReceived","getAllSent","t","removeChangeListener","addChangeListener","e","target","value","i","removeMessage","listItems","Object","keys","map","userIdChange","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MessageStore from './js/stores/MessageStore'\nimport MessageActions from './js/actions/MessageActions';\nimport AddWindow from './js/components/AddWindow'\nimport MessageMenuTab from './js/components/MessageMenuTab'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport \"./App.css\";\n\n\nclass MessageView extends React.Component {\n    render() {\n        return <div className=\"card p-5\">\n                        <header><h3>{this.props.data.subject}</h3></header>\n                        <div className=\"\"><h6>From: {this.props.data.sender}</h6><h6>to: {this.props.data.receiver}</h6></div><br />\n                        <div><h5>{this.props.data.content}</h5></div>\n                </div>;\n    }\n}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user_id: \"aaa@gmail.com\", selected_message: \"\", message_type: \"received\", messages: {}, sent_messages: {}, received_messages: {}};\n        this.onChangeMessages = this.onChangeMessages.bind(this);\n        this.messageTabClick = this.messageTabClick.bind(this);\n        this.onRemoveMessage = this.onRemoveMessage.bind(this);\n        this.displaySentMessages = this.changeMessageType.bind(this, \"sent\");\n        this.displayReceivedMessages = this.changeMessageType.bind(this, \"received\");\n        this.onMessageAction = this.onMessageAction.bind(this);\n    }\n    \n    onMessageAction() {\n        MessageActions.loadData(this.state.user_id);\n    }\n\n    onChangeMessages() {\n        if (this.state.message_type === \"received\")\n            this.setState({messages: MessageStore.getAllReceived(this.state.user_id), selected_message: \"\"});\n        else \n            this.setState({messages: MessageStore.getAllSent(this.state.user_id), selected_message: \"\"});\n    }\n\n    changeMessageType(t) {\n        if (t === \"received\" && this.state.message_type !== \"received\") \n            this.setState({selected_message: \"\", messages: MessageStore.getAllReceived(this.state.user_id), message_type: \"received\"});\n        else if (t === \"sent\" && this.state.message_type !== \"sent\") \n            this.setState({selected_message: \"\", messages: MessageStore.getAllSent(this.state.user_id), message_type: \"sent\"});\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n        MessageStore.removeChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n        MessageStore.removeChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n    }\n\n    componentDidMount() {\n        MessageStore.addChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n        MessageStore.addChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n        MessageStore.addChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n        MessageActions.loadData(this.state.user_id);\n    }\n\n    userIdChange(e) {\n        this.setState({user_id: e.target.value});\n        MessageActions.loadData(e.target.value);\n\n    }\n    messageTabClick(i) {\n        this.setState({selected_message: i});\n    }\n\n    onRemoveMessage(i) {\n        MessageActions.removeMessage(i);\n    }\n\n    render() {\n        const listItems = Object.keys(this.state.messages).map((i) =>\n         <MessageMenuTab onClick={this.messageTabClick} onRemove={this.onRemoveMessage} key={i} id={i} data={this.state.messages[i]} />);\n        return <div className=\"wrapper\"><ReactNotification />\n                    \n                    <nav id=\"sidebar\" className=\"d-flex flex-column\">\n\n                        <li className=\"list-group-item\">Who are you? <input type=\"text\" className=\"form-control\" id=\"userid\" onChange={this.userIdChange.bind(this)} value={this.state.user_id} /></li>\n                        <div className=\"list-group list-group-horizontal d-flex\">\n                          <button id=\"receivedbtn\"  onClick={this.displayReceivedMessages}\n                           className={`list-group-item flex-fill rounded-0 ${this.state.message_type === \"received\" ? 'active' : ''}`}> Received \n                            <span className=\"badge\">{Object.keys(MessageStore.getAllReceived(this.state.user_id)).length}</span>\n                          </button>\n                          <button href=\"#\" id=\"sentbtn\" onClick={this.displaySentMessages}\n                          className={`list-group-item flex-fill rounded-0 ${this.state.message_type === \"sent\" ? 'active' : ''}`}> Sent \n                            <span className=\"badge\">{Object.keys(MessageStore.getAllSent(this.state.user_id)).length}</span>\n                          </button>\n                        </div>\n                        {listItems} \n                        \n                    </nav>\n                <div className=\"content\">\n                    {this.state.selected_message ? <MessageView data={this.state.messages[this.state.selected_message]} /> : <div className=\"banner\">Simple Message</div>}\n                    <AddWindow sender={this.state.user_id}/>\n                </div>\n            </div>;\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}