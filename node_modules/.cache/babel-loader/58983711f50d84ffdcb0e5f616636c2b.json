{"ast":null,"code":"import _slicedToArray from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import AppDispatcher from'../dispatcher/AppDispatcher';import{store}from'react-notifications-component';var EventEmitter=require('events').EventEmitter;var MessageStore=/*#__PURE__*/function(_EventEmitter){_inherits(MessageStore,_EventEmitter);var _super=_createSuper(MessageStore);function MessageStore(){var _this;_classCallCheck(this,MessageStore);_this=_super.call(this);_this.dispatchToken=AppDispatcher.register(_this.dispatcherCallback.bind(_assertThisInitialized(_this)));return _this;}_createClass(MessageStore,[{key:\"emitChange\",value:function emitChange(eventName){this.emit(eventName);}},{key:\"getAll\",value:function getAll(){return this.messages;}},{key:\"getAllReceived\",value:function getAllReceived(user_id){var filtered={};if(this.messages){Object.filter=function(obj,predicate){return Object.fromEntries(Object.entries(obj).filter(predicate));};filtered=Object.filter(this.messages,function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],obj=_ref2[1];return obj.receiver===user_id;});}return filtered;}},{key:\"getAllSent\",value:function getAllSent(user_id){var filtered={};if(this.messages){Object.filter=function(obj,predicate){return Object.fromEntries(Object.entries(obj).filter(predicate));};filtered=Object.filter(this.messages,function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],obj=_ref4[1];return obj.sender===user_id;});}return filtered;}},{key:\"dispatcherCallback\",value:function dispatcherCallback(action){switch(action.type){case\"MESSAGES_FETCHED\":this.messages=action.messages;break;case\"NOTIFICATION\":this.handleNotification(action.variant,action.content);break;default:break;}this.emitChange(action.type);return true;}},{key:\"addChangeListener\",value:function addChangeListener(eventName,callback){this.on(eventName,callback);}},{key:\"removeChangeListener\",value:function removeChangeListener(eventName,callback){this.removeListener(eventName,callback);}},{key:\"handleNotification\",value:function handleNotification(variant,content){store.addNotification({message:content,type:variant,insert:\"top\",container:\"top-right\",animationIn:[\"animated\",\"fadeIn\"],animationOut:[\"animated\",\"fadeOut\"],dismiss:{duration:2500}});}}]);return MessageStore;}(EventEmitter);export default new MessageStore();","map":{"version":3,"sources":["/home/alon/dev/Alon-Hasson-31-05-2020/frontend/src/js/stores/MessageStore.js"],"names":["AppDispatcher","store","EventEmitter","require","MessageStore","dispatchToken","register","dispatcherCallback","bind","eventName","emit","messages","user_id","filtered","Object","filter","obj","predicate","fromEntries","entries","name","receiver","sender","action","type","handleNotification","variant","content","emitChange","callback","on","removeListener","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration"],"mappings":"89BAAA,MAAOA,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,KAAR,KAAoB,+BAApB,CACA,GAAIC,CAAAA,YAAY,CAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAArC,C,GAEME,CAAAA,Y,kHACF,uBAAc,8CACV,wBACA,MAAKC,aAAL,CAAqBL,aAAa,CAACM,QAAd,CAAuB,MAAKC,kBAAL,CAAwBC,IAAxB,+BAAvB,CAArB,CAFU,aAGb,C,uEACUC,S,CAAW,CAClB,KAAKC,IAAL,CAAUD,SAAV,EACH,C,uCAEK,CACL,MAAO,MAAKE,QAAZ,CACH,C,sDAEcC,O,CAAS,CACjB,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAI,KAAKF,QAAT,CAAmB,CACrBG,MAAM,CAACC,MAAP,CAAgB,SAACC,GAAD,CAAMC,SAAN,QACAH,CAAAA,MAAM,CAACI,WAAP,CAAmBJ,MAAM,CAACK,OAAP,CAAeH,GAAf,EAAoBD,MAApB,CAA2BE,SAA3B,CAAnB,CADA,EAAhB,CAEMJ,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAc,KAAKJ,QAAnB,CAA6B,gDAAES,IAAF,UAAQJ,GAAR,gBAAiBA,CAAAA,GAAG,CAACK,QAAJ,GAAiBT,OAAlC,EAA7B,CAAX,CACH,CACP,MAAOC,CAAAA,QAAP,CACA,C,8CAEUD,O,CAAS,CACb,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAI,KAAKF,QAAT,CAAmB,CACrBG,MAAM,CAACC,MAAP,CAAgB,SAACC,GAAD,CAAMC,SAAN,QACAH,CAAAA,MAAM,CAACI,WAAP,CAAmBJ,MAAM,CAACK,OAAP,CAAeH,GAAf,EAAoBD,MAApB,CAA2BE,SAA3B,CAAnB,CADA,EAAhB,CAEMJ,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAc,KAAKJ,QAAnB,CAA6B,kDAAES,IAAF,UAAQJ,GAAR,gBAAiBA,CAAAA,GAAG,CAACM,MAAJ,GAAeV,OAAhC,EAA7B,CAAX,CACH,CACP,MAAOC,CAAAA,QAAP,CACA,C,8DAEkBU,M,CAAQ,CACpB,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,kBAAL,CACC,KAAKb,QAAL,CAAgBY,MAAM,CAACZ,QAAvB,CACH,MACE,IAAK,cAAL,CACI,KAAKc,kBAAL,CAAwBF,MAAM,CAACG,OAA/B,CAAwCH,MAAM,CAACI,OAA/C,EACA,MACP,QACC,MARF,CAWN,KAAKC,UAAL,CAAgBL,MAAM,CAACC,IAAvB,EAEM,MAAO,KAAP,CACH,C,4DAEiBf,S,CAAWoB,Q,CAAU,CACnC,KAAKC,EAAL,CAAQrB,SAAR,CAAmBoB,QAAnB,EACH,C,kEAEoBpB,S,CAAWoB,Q,CAAU,CACtC,KAAKE,cAAL,CAAoBtB,SAApB,CAA+BoB,QAA/B,EACH,C,8DAEkBH,O,CAASC,O,CAAS,CACjC1B,KAAK,CAAC+B,eAAN,CAAsB,CAChBC,OAAO,CAAEN,OADO,CAEhBH,IAAI,CAAEE,OAFU,CAGhBQ,MAAM,CAAE,KAHQ,CAIhBC,SAAS,CAAE,WAJK,CAKhBC,WAAW,CAAE,CAAC,UAAD,CAAa,QAAb,CALG,CAMhBC,YAAY,CAAE,CAAC,UAAD,CAAa,SAAb,CANE,CAOhBC,OAAO,CAAE,CACPC,QAAQ,CAAE,IADH,CAPO,CAAtB,EAWH,C,0BAvEsBrC,Y,EA0E3B,cAAe,IAAIE,CAAAA,YAAJ,EAAf","sourcesContent":["import AppDispatcher from '../dispatcher/AppDispatcher'\nimport {store} from 'react-notifications-component'\nvar EventEmitter = require('events').EventEmitter;\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n        this.dispatchToken = AppDispatcher.register(this.dispatcherCallback.bind(this));\n    }\n    emitChange(eventName) {\n        this.emit(eventName);\n    }\n\n\tgetAll() {\n\t    return this.messages;\n\t}\n\n\tgetAllReceived(user_id) {\n        var filtered = {};\n\n        if (this.messages) {\n    \t\tObject.filter = (obj, predicate) => \n                      Object.fromEntries(Object.entries(obj).filter(predicate));\n            filtered = Object.filter(this.messages, ([name, obj]) => obj.receiver === user_id); \n        }\n\t\treturn filtered;\n\t}\n\n\tgetAllSent(user_id) {\n        var filtered = {};\n        if (this.messages) {\n    \t\tObject.filter = (obj, predicate) => \n                      Object.fromEntries(Object.entries(obj).filter(predicate));\n            filtered = Object.filter(this.messages, ([name, obj]) => obj.sender === user_id); \n        }\n\t\treturn filtered;\n\t}\n\n\tdispatcherCallback(action) {\n        switch (action.type) {\n            case \"MESSAGES_FETCHED\":\n            \tthis.messages = action.messages;\n        \t\tbreak;\n            case \"NOTIFICATION\":\n                this.handleNotification(action.variant, action.content);\n                break;\n        \tdefault:\n        \t\tbreak;\n        }\n\n\t\tthis.emitChange(action.type);\n\n        return true;\n    }\n\n    addChangeListener(eventName, callback) {\n        this.on(eventName, callback);\n    }\n \n    removeChangeListener(eventName, callback) {\n        this.removeListener(eventName, callback);\n    }\n\n    handleNotification(variant, content) {\n        store.addNotification({\n              message: content,\n              type: variant,\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 2500,\n              }\n        });\n    }\n \n}\nexport default new MessageStore();"]},"metadata":{},"sourceType":"module"}