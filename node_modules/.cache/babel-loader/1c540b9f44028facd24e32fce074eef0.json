{"ast":null,"code":"var _jsxFileName = \"/home/alon/dev/Alon-Hasson-31-05-2020/frontend/src/app.js\";\nimport React from 'react';\nimport MessageStore from './js/stores/MessageStore';\nimport MessageActions from './js/actions/MessageActions';\nimport AddWindow from './js/components/AddWindow';\nimport MessageMenuTab from './js/components/MessageMenuTab';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport \"./App.css\";\n\nclass MessageView extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 33\n      }\n    }, this.props.data.subject)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 43\n      }\n    }, \"From: \", this.props.data.sender), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 82\n      }\n    }, \"to: \", this.props.data.receiver)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 127\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 30\n      }\n    }, this.props.data.content)));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: \"aaa@gmail.com\",\n      selected_message: \"\",\n      message_type: \"received\",\n      messages: {},\n      sent_messages: {},\n      received_messages: {}\n    };\n    this.onChangeMessages = this.onChangeMessages.bind(this);\n    this.messageTabClick = this.messageTabClick.bind(this);\n    this.onRemoveMessage = this.onRemoveMessage.bind(this);\n    this.displaySentMessages = this.changeMessageType.bind(this, \"sent\");\n    this.displayReceivedMessages = this.changeMessageType.bind(this, \"received\");\n    this.onMessageAction = this.onMessageAction.bind(this);\n  }\n\n  onMessageAction() {\n    MessageActions.loadData(this.state.user_id);\n  }\n\n  onChangeMessages() {\n    if (this.state.message_type === \"received\") this.setState({\n      messages: MessageStore.getAllReceived(this.state.user_id),\n      selected_message: \"\"\n    });else this.setState({\n      messages: MessageStore.getAllSent(this.state.user_id),\n      selected_message: \"\"\n    });\n  }\n\n  changeMessageType(t) {\n    if (t === \"received\" && this.state.message_type !== \"received\") this.setState({\n      selected_message: \"\",\n      messages: MessageStore.getAllReceived(this.state.user_id),\n      message_type: \"received\"\n    });else if (t === \"sent\" && this.state.message_type !== \"sent\") this.setState({\n      selected_message: \"\",\n      messages: MessageStore.getAllSent(this.state.user_id),\n      message_type: \"sent\"\n    });\n  }\n\n  componentWillUnmount() {\n    MessageStore.removeChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n    MessageStore.removeChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n    MessageStore.removeChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n  }\n\n  componentDidMount() {\n    MessageStore.addChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n    MessageStore.addChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n    MessageStore.addChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n    MessageActions.loadData(this.state.user_id);\n  }\n\n  userIdChange(e) {\n    this.setState({\n      user_id: e.target.value\n    });\n    MessageActions.loadData(e.target.value);\n  }\n\n  messageTabClick(i) {\n    this.setState({\n      selected_message: i\n    });\n  }\n\n  onRemoveMessage(i) {\n    MessageActions.removeMessage(i);\n  }\n\n  render() {\n    const listItems = Object.keys(this.state.messages).map(i => /*#__PURE__*/React.createElement(MessageMenuTab, {\n      onClick: this.messageTabClick,\n      onRemove: this.onRemoveMessage,\n      key: i,\n      id: i,\n      data: this.state.messages[i],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(ReactNotification, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"nav\", {\n      id: \"sidebar\",\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Who are you? \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"userid\",\n      onChange: this.userIdChange.bind(this),\n      value: this.state.user_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 70\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group list-group-horizontal d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"receivedbtn\",\n      onClick: this.displayReceivedMessages,\n      className: `list-group-item flex-fill rounded-0 ${this.state.message_type === \"received\" ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }\n    }, \" Received\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, Object.keys(MessageStore.getAllReceived(this.state.user_id)).length)), /*#__PURE__*/React.createElement(\"button\", {\n      href: \"#\",\n      id: \"sentbtn\",\n      onClick: this.displaySentMessages,\n      className: `list-group-item flex-fill rounded-0 ${this.state.message_type === \"sent\" ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }, \" Sent\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, Object.keys(MessageStore.getAllSent(this.state.user_id)).length))), listItems), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, this.state.selected_message ? /*#__PURE__*/React.createElement(MessageView, {\n      data: this.state.messages[this.state.selected_message],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 126\n      }\n    }, \"Simple Message\"), /*#__PURE__*/React.createElement(AddWindow, {\n      sender: this.state.user_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alon/dev/Alon-Hasson-31-05-2020/frontend/src/app.js"],"names":["React","MessageStore","MessageActions","AddWindow","MessageMenuTab","ReactNotification","MessageView","Component","render","props","data","subject","sender","receiver","content","App","constructor","state","user_id","selected_message","message_type","messages","sent_messages","received_messages","onChangeMessages","bind","messageTabClick","onRemoveMessage","displaySentMessages","changeMessageType","displayReceivedMessages","onMessageAction","loadData","setState","getAllReceived","getAllSent","t","componentWillUnmount","removeChangeListener","componentDidMount","addChangeListener","userIdChange","e","target","value","i","removeMessage","listItems","Object","keys","map","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MessageStore from './js/stores/MessageStore'\nimport MessageActions from './js/actions/MessageActions';\nimport AddWindow from './js/components/AddWindow'\nimport MessageMenuTab from './js/components/MessageMenuTab'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport \"./App.css\";\n\n\nclass MessageView extends React.Component {\n    render() {\n        return <div className=\"card p-5\">\n                        <header><h3>{this.props.data.subject}</h3></header>\n                        <div className=\"\"><h6>From: {this.props.data.sender}</h6><h6>to: {this.props.data.receiver}</h6></div><br />\n                        <div><h5>{this.props.data.content}</h5></div>\n                </div>;\n    }\n}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user_id: \"aaa@gmail.com\", selected_message: \"\", message_type: \"received\", messages: {}, sent_messages: {}, received_messages: {}};\n        this.onChangeMessages = this.onChangeMessages.bind(this);\n        this.messageTabClick = this.messageTabClick.bind(this);\n        this.onRemoveMessage = this.onRemoveMessage.bind(this);\n        this.displaySentMessages = this.changeMessageType.bind(this, \"sent\");\n        this.displayReceivedMessages = this.changeMessageType.bind(this, \"received\");\n        this.onMessageAction = this.onMessageAction.bind(this);\n    }\n    \n    onMessageAction() {\n        MessageActions.loadData(this.state.user_id);\n    }\n\n    onChangeMessages() {\n        if (this.state.message_type === \"received\")\n            this.setState({messages: MessageStore.getAllReceived(this.state.user_id), selected_message: \"\"});\n        else \n            this.setState({messages: MessageStore.getAllSent(this.state.user_id), selected_message: \"\"});\n    }\n\n    changeMessageType(t) {\n        if (t === \"received\" && this.state.message_type !== \"received\") \n            this.setState({selected_message: \"\", messages: MessageStore.getAllReceived(this.state.user_id), message_type: \"received\"});\n        else if (t === \"sent\" && this.state.message_type !== \"sent\") \n            this.setState({selected_message: \"\", messages: MessageStore.getAllSent(this.state.user_id), message_type: \"sent\"});\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n        MessageStore.removeChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n        MessageStore.removeChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n    }\n\n    componentDidMount() {\n        MessageStore.addChangeListener(\"MESSAGES_FETCHED\", this.onChangeMessages);\n        MessageStore.addChangeListener(\"MESSAGE_DELETED\", this.onMessageAction);\n        MessageStore.addChangeListener(\"MESSAGE_SENT\", this.onMessageAction);\n        MessageActions.loadData(this.state.user_id);\n    }\n\n    userIdChange(e) {\n        this.setState({user_id: e.target.value});\n        MessageActions.loadData(e.target.value);\n\n    }\n    messageTabClick(i) {\n        this.setState({selected_message: i});\n    }\n\n    onRemoveMessage(i) {\n        MessageActions.removeMessage(i);\n    }\n\n    render() {\n        const listItems = Object.keys(this.state.messages).map((i) =>\n         <MessageMenuTab onClick={this.messageTabClick} onRemove={this.onRemoveMessage} key={i} id={i} data={this.state.messages[i]} />);\n        return <div className=\"wrapper\"><ReactNotification />\n                    \n                    <nav id=\"sidebar\" className=\"d-flex flex-column\">\n\n                        <li className=\"list-group-item\">Who are you? <input type=\"text\" className=\"form-control\" id=\"userid\" onChange={this.userIdChange.bind(this)} value={this.state.user_id} /></li>\n                        <div className=\"list-group list-group-horizontal d-flex\">\n                          <button id=\"receivedbtn\"  onClick={this.displayReceivedMessages}\n                           className={`list-group-item flex-fill rounded-0 ${this.state.message_type === \"received\" ? 'active' : ''}`}> Received \n                            <span className=\"badge\">{Object.keys(MessageStore.getAllReceived(this.state.user_id)).length}</span>\n                          </button>\n                          <button href=\"#\" id=\"sentbtn\" onClick={this.displaySentMessages}\n                          className={`list-group-item flex-fill rounded-0 ${this.state.message_type === \"sent\" ? 'active' : ''}`}> Sent \n                            <span className=\"badge\">{Object.keys(MessageStore.getAllSent(this.state.user_id)).length}</span>\n                          </button>\n                        </div>\n                        {listItems} \n                        \n                    </nav>\n                <div className=\"content\">\n                    {this.state.selected_message ? <MessageView data={this.state.messages[this.state.selected_message]} /> : <div className=\"banner\">Simple Message</div>}\n                    <AddWindow sender={this.state.user_id}/>\n                </div>\n            </div>;\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}